// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	coinPrice "github.com/firstsatoshi/website/internal/handler/coinPrice"
	createOrder "github.com/firstsatoshi/website/internal/handler/createOrder"
	joinwaitlist "github.com/firstsatoshi/website/internal/handler/joinwaitlist"
	queryBlindboxEvent "github.com/firstsatoshi/website/internal/handler/queryBlindboxEvent"
	queryOrder "github.com/firstsatoshi/website/internal/handler/queryOrder"
	"github.com/firstsatoshi/website/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/joinwaitlist",
				Handler: joinwaitlist.JoinWaitListHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/createorder",
				Handler: createOrder.CreateOrderHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/queryorder",
				Handler: queryOrder.QueryOrderHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/queryblindboxevent",
				Handler: queryBlindboxEvent.QueryBlindboxEventHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/coinprice",
				Handler: coinPrice.CoinPriceHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)
}
