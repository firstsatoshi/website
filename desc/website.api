syntax = "v1"

type JoinWaitListReq {
	Email       string `json:"email"`
	BtcAddress  string `json:"btcAddress"`
	ReferalCode string `json:"referalCode,optional"`
	Token       string `json:"token"`
}

type JoinWaitListResp {
	ReferalCode string `json:"referalCode"`
	Duplicated  bool   `json:"duplicated"`
}

// 加入预约
@server(
	prefix: api/v1
	group: joinwaitlist
)
service website-api {
	@handler joinWaitList
	post /joinwaitlist(JoinWaitListReq) returns (JoinWaitListResp)
}

type createOrderReq {
	EventId        int    `json:"eventId"`
	Count          int    `json:"count"`
	ReceiveAddress string `json:"receiveAddress"`
	FeeRate        int    `json:"feeRate"`
	Token          string `json:"token"`
}

type createOrderResp {
	OrderId        string `json:"orderId"`
	EventId        int    `json:"eventId"`
	Count          int    `json:"count"`
	DepositAddress string `json:"depositAddress"`
	ReceiveAddress string `json:"receiveAddress"`
	FeeRate        int    `json:"feeRate"`
	Bytes          int    `json:"bytes"`
	InscribeFee    int    `json:"inscribeFee"`
	ServiceFee     int    `json:"serviceFee"`
	Price          int    `json:"price"`
	Total          int    `json:"total"`
	CreateTime     string `json:"createTime"`
}

// 创建订单
@server(
	prefix: api/v1
	group: createOrder
)
service website-api {
	@handler createOrder
	post /createorder(createOrderReq) returns (createOrderResp)
}

type queryOrderReq {
	OrderId        string `json:"orderId,optional"`
	ReceiveAddress string `json:"receiveAddress,optional"`
	DepositAddress string `json:"depositAddress,optional"`
}

type NftDetail {
	Txid        string `json:"txid"`
	TxConfirmed bool   `json:"confirmed"`
	Name        string `json:"name"`
	Category    string `json:"category"`
	Description string `json:"description"`
	ImageUrl    string `json:"imageUrl"`
}

type Order {
	OrderId          string      `json:"orderId"`
	EventId          int         `json:"eventId"`
	DepositAddress   string      `json:"depositAddress"`
	Count            int         `json:"count"`
	Total            int         `json:"total"`
	FeeRate          int         `json:"feeRate"`
	ReceiveAddress   string      `json:"receiveAddress"`
	OrderStatus      string      `json:"orderStatus"`
	PayTxid          string      `json:"payTxid"`
	PayTime          string      `json:"paytime"`
	PayConfirmedTime string      `json:"payConfirmedTime"`
	NftDetails       []NftDetail `json:"nftDetails"`
	CreateTime       string      `json:"createTime"`
}

// 查询订单
@server(
	prefix: api/v1
	group: queryOrder
)
service website-api {
	@handler queryOrder
	post /queryorder(queryOrderReq) returns ([]Order)
}

type BlindboxEvent {
	EventId           int    `json:"eventId"`
	Name              string `json:"name"`
	Description       string `json:"description"`
	ImageUrl          string `json:"imageUrl"`
	PriceBtcSats      int    `json:"priceBtcSats"`
	PriceUsd          int    `json:"priceUsd"`          // usd价格
	PaymentToken      string `json:"paymentToken"`      // 支付币种
	AverageImageBytes int    `json:"averageImageBytes"` // 平均图片大小
	Supply            int    `json:"supply"`            // 总数量
	Avail             int    `json:"avail"`             // 可用数量
	MintLimit         int    `json:"mintLimit"`         // mint 限制
	Enable            bool   `json:"enable"`            // 是否开启
	OnlyWhiteist      bool   `json:"onlyWhitelist"`     // 仅白名单
	StartTime         string `json:"startTime"`         // 开始时间
	EndTime           string `json:"endTime"`           // 结束时间
}

// 查询盲盒活动
@server(
	prefix: api/v1
	group: queryBlindboxEvent
)
service website-api {
	@handler queryBlindboxEvent
	post /queryblindboxevent returns ([]BlindboxEvent)
}

type coinPriceResp {
	BtcPriceUsd float64 `json:"btcPriceUsd"`
}

// 查询btc价格
@server(
	prefix: api/v1
	group: coinPrice
)
service website-api {
	@handler coinPrice
	post /coinprice returns (coinPriceResp)
}

type queryGalleryListReq {
	CurPage  int    `json:"curPage"`
	PageSize int    `json:"pageSize"`
	Category string `json:"category"`
}

type NFT {
	Id          int    `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	ImageUrl    string `json:"imageUrl"`
}

type queryGalleryListResp {
	Category string `json:"category"`
	CurPage  int    `json:"curPage"`
	Total    int    `json:"totalPage"`
	PageSize int    `json:"pageSize"`
	NFTs     []NFT  `json:"nfts"`
}

// 获取图鉴
@server(
	prefix: api/v1
	group: queryGalleryList
)
service website-api {
	@handler queryGalleryList
	post /querygallerylist (queryGalleryListReq)returns (queryGalleryListResp)
}

type checkWhitelistReq {
	ReceiveAddress string `json:"receiveAddress"`
}

type checkWhitelistResp {
	IsWhitelist bool `json:"isWhitelist"`
}

// 判断白名单
@server(
	prefix: api/v1
	group: checkwhitelist
)
service website-api {
	@handler checkWhitelist
	post /checkwhitelist (checkWhitelistReq)returns (checkWhitelistResp)
}

// 查询地址信息（是否是白名单，当前订单数量）
type queryAddressReq {
	EventId        int    `json:"eventId"`
	ReceiveAddress string `json:"receiveAddress"`
}

type queryAddressResp {
	EventId            int  `json:"eventId"`
	IsWhitelist        bool `json:"isWhitelist"`
	EventMintLimit     int  `json:"eventMintLimit"`
	CurrentOrdersTotal int  `json:"currentOrdersTotal"`
}

@server(
	prefix: api/v1
	group: queryAddress
)
service website-api {
	@handler queryAddress
	post /queryaddress (queryAddressReq)returns (queryAddressResp)
}

// inscribe
type createInscribeOrderReq {
	Count          int    `json:"count"`
	DataUrl        string `json:"dataUrl"` // dataURL schema
	ReceiveAddress string `json:"receiveAddress"`
	FeeRate        int    `json:"feeRate"`
	Checksum       string `json:"checksum"` // checksum of data and contentType and dataBytes and token
	Token          string `json:"token"`
}

type createInscribeOrderResp {
	OrderId        string `json:"orderId"`
	Count          int    `json:"count"`
	DepositAddress string `json:"depositAddress"`
	ReceiveAddress string `json:"receiveAddress"`
	FeeRate        int    `json:"feeRate"`
	Bytes          int    `json:"bytes"`
	InscribeFee    int    `json:"inscribeFee"`
	ServiceFee     int    `json:"serviceFee"`
	Total          int    `json:"total"`
	CreateTime     string `json:"createTime"`
}

@server(
	prefix: api/v1
	group: createInscribeOrder
)
service website-api {
	@handler createInscribeOrder
	post /createinscribeorder(createInscribeOrderReq) returns (createInscribeOrderResp)
}