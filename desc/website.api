syntax = "v1"

type JoinWaitListReq {
	Email      string `json:"email"`
	BtcAddress string `json:"btcAddress"`
}

type JoinWaitListResp {
	Id         int  `json:"no"`
	Duplicated bool `json:"duplicated"`
}

// 加入预约
@server(
	prefix: api/v1
	group: joinwaitlist
)
service website-api {
	@handler joinWaitList
	post /joinwaitlist(JoinWaitListReq) returns (JoinWaitListResp)
}

type createOrderReq {
	EventId        int    `json:"eventId"`
	Count          int    `json:"count"`
	ReceiveAddress string `json:"receiveAddress"`
	FeeRate        int    `json:"feeRate"`
}

type createOrderResp {
	OrderId        string `json:"orderId"`
	EventId        int    `json:"eventId"`
	Count          int    `json:"count"`
	DepositAddress string `json:"depositAddress"`
	ReceiveAddress string `json:"receiveAddress"`
	FeeRate        int    `json:"feeRate"`
	Bytes          int    `json:"bytes"`
	InscribeFee    int    `json:"inscribeFee"`
	ServiceFee     int    `json:"serviceFee"`
	Price          int    `json:"price"`
	Total          int    `json:"total"`
	CreateTime     string `json:"createTime"`
}

// 创建订单
@server(
	prefix: api/v1
	group: createOrder
)
service website-api {
	@handler createOrder
	post /createorder(createOrderReq) returns (createOrderResp)
}

type queryOrderReq {
	OrderId        string `json:"orderId,optional"`
	ReceiveAddress string `json:"receiveAddress,optional"`
	DepositAddress string `json:"depositAddress,optional"`
}

type Order {
	OrderId          string `json:"orderId"`
	EventId          int    `json:"eventId"`
	DepositAddress   string `json:"depositAddress"`
	Total            int    `json:"total"`
	ReceiveAddress   string `json:"receiveAddress"`
	OrderStatus      string `json:"orderStatus"`
	PayTime          string `json:"paytime"`
	PayConfirmedTime string `json:"payConfirmedTime"`
	RevealTxid       string `json:"revealTxid"`
	CreateTime       string `json:"createTime"`
}

type queryOrderResp {
	Orders []Order `json:"order,omitempty"`
}

// 查询订单
@server(
	prefix: api/v1
	group: queryOrder
)
service website-api {
	@handler queryOrder
	post /queryorder(queryOrderReq) returns (queryOrderResp)
}

type queryBlindboxEventResp {
	EventId      int    `json:"eventId"`
	Name         string `json:"name"`
	Description  string `json:"description"`
	PriceBtcSats int    `json:"priceBtcSats"`
	PriceUsd     int    `json:"priceUsd"`      // usd价格
	PaymentCoin  string `json:"paymentCoin"`   // 支付币种
	Supply       int    `json:"supply"`        // 总数量
	Avail        int    `json:"avail"`         // 可用数量
	Enable       bool   `json:"enable"`        // 是否开启
	OnlyWhiteist bool   `json:"onlyWhitelist"` // 仅白名单
	StartTime    string `json:"startTime"`     // 开始时间
	EndTime      string `json:"endTime"`       // 结束时间
}

// 查询盲盒
@server(
	prefix: api/v1
	group: queryBlindboxEvent
)
service website-api {
	@handler queryBlindboxEvent
	post /queryblindboxevent returns (queryBlindboxEventResp)
}

type coinPriceResp {
	BtcPriceUsd float64 `json:"btcPriceUsd"`
}

// 查询盲盒
@server(
	prefix: api/v1
	group: coinPrice
)
service website-api {
	@handler coinPrice
	post /coinprice returns (coinPriceResp)
}